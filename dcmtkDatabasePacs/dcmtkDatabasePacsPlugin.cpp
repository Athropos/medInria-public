// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "dcmtkDatabasePacsPlugin.h"
#include "dcmtkPacsFindScu.h"
#include "dcmtkPacsEchoScu.h"
#include "dcmtkPacsMoveScu.h"
#include "dcmtkPacsStoreScp.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// dcmtkDatabasePacsPluginPrivate
// /////////////////////////////////////////////////////////////////

class dcmtkDatabasePacsPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// dcmtkDatabasePacsPlugin
// /////////////////////////////////////////////////////////////////

dcmtkDatabasePacsPlugin::dcmtkDatabasePacsPlugin(QObject *parent) : dtkPlugin(parent), d(new dcmtkDatabasePacsPluginPrivate)
{

}

dcmtkDatabasePacsPlugin::~dcmtkDatabasePacsPlugin(void)
{
    delete d;

    d = NULL;
}

#include "medLogger/BaseLogger.h"
#include "medLogger/LoggerConsoleOutput.h"

bool dcmtkDatabasePacsPlugin::initialize(void)
{
    LoggerConsoleOutput *out = new LoggerConsoleOutput(LoggerLogLevel::WARNINGLOG);

    BaseLogger::addOutput(out);

    if(!dcmtkPacsFindScu::registered()) {
        dtkWarning() << "Unable to register dcmtkPacsFindScu type";
        return false;
    }

    if(!dcmtkPacsEchoScu::registered()) {
        dtkWarning() << "Unable to register dcmtkPacsEchoScu type";
        return false;
    }

    if(!dcmtkPacsMoveScu::registered()) {
        dtkWarning() << "Unable to register dcmtkPacsMoveScu type";
        return false;
    }

    if(!dcmtkPacsStoreScp::registered()) {
        dtkWarning() << "Unable to register dcmtkPacsStoreScp type";
        return false;
    }

    return true;
}

bool dcmtkDatabasePacsPlugin::uninitialize(void)
{
    return true;
}

QString dcmtkDatabasePacsPlugin::name(void) const
{
    return "dcmtkDatabasePacsPlugin";
}

QString dcmtkDatabasePacsPlugin::description(void) const
{
    return "dcmtkDatabasePacs";
}

QStringList dcmtkDatabasePacsPlugin::tags(void) const
{
    return QStringList() << "PACS" << "DICOM";
}

QStringList dcmtkDatabasePacsPlugin::types(void) const
{
    return QStringList() << "dcmtkDatabasePacs";
}

Q_EXPORT_PLUGIN2(dcmtkDatabasePacsPlugin, dcmtkDatabasePacsPlugin)
