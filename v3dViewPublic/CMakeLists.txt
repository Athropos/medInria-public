## #################################################################
## Generated by dtkPluginGenerator
## #################################################################

cmake_minimum_required(VERSION 2.8.1)

project(v3dViewPublicPlugin)

## #################################################################
## Setup version numbering
## #################################################################

set(${PROJECT_NAME}_VERSION_MAJOR 2 CACHE STRING "${PROJECT_NAME} major version number." FORCE)
set(${PROJECT_NAME}_VERSION_MINOR 0 CACHE STRING "${PROJECT_NAME} minor version number." FORCE)
set(${PROJECT_NAME}_VERSION_BUILD 0 CACHE STRING "${PROJECT_NAME} build version number." FORCE)
set(${PROJECT_NAME}_VERSION
  "${${PROJECT_NAME}_VERSION_MAJOR}.${${PROJECT_NAME}_VERSION_MINOR}.${${PROJECT_NAME}_VERSION_BUILD}")

mark_as_advanced(${PROJECT_NAME}_VERSION_MAJOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_MINOR)
mark_as_advanced(${PROJECT_NAME}_VERSION_BUILD)

set(CMAKE_COLOR_MAKEFILE ON)
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_INCLUDE_CURRENT_DIR TRUE)

## #################################################################
## Resolve dependencies
## #################################################################

option(MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE "Include TTK dependent code in ${PROJECT_NAME}" "ON")

find_package(dtk REQUIRED)
include(${dtk_USE_FILE})
include(dtkPlugin)

find_package(medInria REQUIRED)
include(${medInria_USE_FILE})

find_package(vtkINRIA3D REQUIRED)
include(${vtkINRIA3D_USE_FILE})

if ( MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE )
    find_package(TTK REQUIRED)
    include(${TTK_USE_FILE})
endif ( MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE )

#include_directories(../dtkVtkLogForwarder)
find_package(medInria-plugins REQUIRED)
include(${medInria-plugins_USE_FILE})

## #################################################################
## Input
## #################################################################
if ( MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE )
    set(${PROJECT_NAME}_TTK_DEPENDENT_HEADERS_MOC
      v3dViewPublicFiberInteractor.h
      v3dViewPublicTensorInteractor.h
    )
    set(${PROJECT_NAME}_TTK_DEPENDENT_SOURCES
       v3dViewPublicFiberInteractor.cpp
       v3dViewPublicTensorInteractor.cpp
    )
    set(${PROJECT_NAME}_TTK_DEPENDENT_LINK_LIBRARIES
       ttkAlgorithms
    )
else( MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE )
    set(${PROJECT_NAME}_TTK_DEPENDENT_HEADERS_MOC)
    set(${PROJECT_NAME}_TTK_DEPENDENT_SOURCES)
    set(${PROJECT_NAME}_TTK_DEPENDENT_LINK_LIBRARIES)
    add_definitions(-DDISABLE_TTK_DEPENDENT_CODE)
endif ( MEDINRIA_V3DVIEW_PUBLIC_BUILD_TTK_DEPENDENT_CODE )

set(${PROJECT_NAME}_HEADERS_MOC
  v3dViewPublicPlugin.h
  v3dViewPublic.h
  v3dViewPublicMeshInteractor.h
  v3dViewPublicFuseInteractor.h
  ${${PROJECT_NAME}_TTK_DEPENDENT_HEADERS_MOC}
  )

set(${PROJECT_NAME}_SOURCES
  v3dViewPublicPlugin.cpp
  v3dViewPublic.cpp
  v3dViewPublicMeshInteractor.cpp
  v3dViewPublicFuseInteractor.cpp
  ${${PROJECT_NAME}_TTK_DEPENDENT_SOURCES}
  )

## #################################################################
## Build rules
## #################################################################

qt4_wrap_cpp(${PROJECT_NAME}_SOURCES_MOC ${${PROJECT_NAME}_HEADERS_MOC})

if(MEDINRIA_PLUGINS_USE_PRECOMPILED_HEADERS)
  add_precompiled_header(${PROJECT_NAME}_SOURCES_PCH
    "medPluginsPch.h" "../src/medPluginsPch/medPluginsVtkPch.cpp"
    ${${PROJECT_NAME}_SOURCES_MOC}
    ${${PROJECT_NAME}_SOURCES})
endif(MEDINRIA_PLUGINS_USE_PRECOMPILED_HEADERS)

add_library(${PROJECT_NAME} SHARED
  ${${PROJECT_NAME}_SOURCES_MOC} 
  ${${PROJECT_NAME}_SOURCES_PCH} 
  ${${PROJECT_NAME}_SOURCES})

target_link_libraries(${PROJECT_NAME}
  ${QT_LIBRARIES}
  ${${PROJECT_NAME}_TTK_DEPENDENT_LINK_LIBRARIES}
  dtkItkLogForwarder
  dtkVtkLogForwarder
  medCore
  dtkCore
  vtkCommon
  vtkRendering
  vtkRenderingAddOn
  vtkWidgetsAddOn
  vtkVisuManagement
  vtkVolumeRendering
  QVTK)

if (vtkINRIA3D_USE_ITK)
  target_link_libraries(${PROJECT_NAME} ${ITK_LIBRARIES})
endif (vtkINRIA3D_USE_ITK)

if(BUILD_DOCUMENTATION)
	dtk_build_doc(${PROJECT_NAME})
endif(BUILD_DOCUMENTATION)

## #################################################################
## Install rules
## #################################################################

install(TARGETS ${PROJECT_NAME}
  RUNTIME DESTINATION plugins
  LIBRARY DESTINATION plugins
  ARCHIVE DESTINATION lib)
