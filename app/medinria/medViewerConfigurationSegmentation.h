#ifndef MEDVIEWERCONFIGURATIONSEGMENTATION_H
#define MEDVIEWERCONFIGURATIONSEGMENTATION_H


// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include <medViewerConfiguration.h>

class QGraphicsSceneMouseEvent;

class medProgressionStack;

class medViewerConfigurationSegmentationPrivate;
class medToolBoxSegmentation;

class medViewerConfigurationSegmentation : public medViewerConfiguration
{
    Q_OBJECT

public:
    medViewerConfigurationSegmentation(QWidget * parent = NULL);

    virtual ~medViewerConfigurationSegmentation(void);

    //! Overrides base class.
    QString description(void) const;

    //! Implement abstract method in base class.
    void setupViewContainerStack();

    //! Register with factory, return true if successful.
    static bool registerWithViewerConfigurationFactory();

    //! Return the name associated with this configuration
    static QString ConfigurationName();

    //! 
    medProgressionStack * progressionStack();

    medToolBoxSegmentation * segmentationToobox();

    void buildConfiguration(  );


signals:
    void viewAdded(dtkAbstractView* view);
    void viewRemoved(dtkAbstractView* view);

public slots:
    void onViewAdded(dtkAbstractView* view);
    void onViewRemoved(dtkAbstractView* view);

    /**@brief Connects toolboxes to the current container
     * @param name the container name */
    virtual void connectToolboxesToCurrentContainer(const QString &name);

protected:
    // Creator function
    static medViewerConfiguration * createMedSegmentationConfiguration(QWidget * parent);

    //! Id stgring used for  view containers
    QString containerIdentifier() const; 

private:
    medViewerConfigurationSegmentationPrivate *d;
};

#endif // MEDVIEWERCONFIGURATIONSEGMENTATION_H
