// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef ITKPROCESSREGISTRATIONDIFFEOMORPHICDEMONS_H
#define ITKPROCESSREGISTRATIONDIFFEOMORPHICDEMONS_H

#include <itkProcessRegistration/itkProcessRegistration.h>
#include "itkProcessRegistrationDiffeoMorphicDemonsPluginExport.h"

class itkProcessRegistrationDiffeoMorphicDemonsPrivate;

class ITKPROCESSREGISTRATIONDIFFEOMORPHICDEMONSPLUGIN_EXPORT itkProcessRegistrationDiffeoMorphicDemons : public itkProcessRegistration
{
    Q_OBJECT

public:
             itkProcessRegistrationDiffeoMorphicDemons(void);
    virtual ~itkProcessRegistrationDiffeoMorphicDemons(void);

    virtual QString description(void) const;

    static bool registered(void);

public:
    virtual int update(ImageType);

    void setNumberOfIterations(std::vector <unsigned int> iterations);
    void setUpdateRule( unsigned char updateRule);
    void setGradientType (unsigned char gradientType);
    void setMaximumUpdateLength (float maximumUpdateStepLength);
    void setUpdateFieldStandardDeviation(float updateFieldStandardDeviation);
    void setDisplacementFieldStandardDeviation(float displacementFieldStandardDeviation);
    void setUseHistogramMatching(bool useHistogramMatching);

//public slots:
//    bool write(const QString& file);
protected :
    virtual bool writeTransform(const QString& file);

private:
    itkProcessRegistrationDiffeoMorphicDemonsPrivate *d;

};

dtkAbstractProcess *createitkProcessRegistrationDiffeoMorphicDemons(void);

#endif
