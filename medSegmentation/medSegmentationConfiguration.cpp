// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "medSegmentationConfiguration.h"

#include "medToolBoxSegmentationView.h"

#include <medGui/medStackedViewContainers.h>
#include <medGui/medViewerConfigurationFactory.h>
#include <medGui/medViewerToolBoxView.h>

// /////////////////////////////////////////////////////////////////
// medSegmentationConfigurationPrivate
// /////////////////////////////////////////////////////////////////

class medSegmentationConfigurationPrivate
{
public:
    medViewerToolBoxView                *viewToolBox;
    medToolBoxSegmentationView          *segmentationToolBox;
};

// /////////////////////////////////////////////////////////////////
// medSegmentationConfiguration
// /////////////////////////////////////////////////////////////////
//static
medViewerConfiguration * medSegmentationConfiguration::createMedSegmentationConfiguration()
{
    return new medSegmentationConfiguration;
}

medSegmentationConfiguration::medSegmentationConfiguration(QWidget * parent /* = NULL */ ) : 
medViewerConfiguration(parent), d(new medSegmentationConfigurationPrivate)
{
    d->segmentationToolBox = new medToolBoxSegmentationView( parent );

    this->addToolBox( d->segmentationToolBox );

}

medSegmentationConfiguration::~medSegmentationConfiguration(void)
{
    delete d;
    d = NULL;
}

bool medSegmentationConfiguration::registerWithViewerConfigurationFactory()
{
    return medViewerConfigurationFactory::instance()->registerConfiguration( 
        medSegmentationConfiguration::ConfigurationName(), 
        medSegmentationConfiguration::createMedSegmentationConfiguration
        );
}

QString medSegmentationConfiguration::ConfigurationName()
{
    // This is the string that appears in the drop-down.
    static QString confName( tr("Segmentation") );
    return confName;
}

void medSegmentationConfiguration::setupViewContainerStack()
{
    if (!stackedViewContainers()->count())
    {
        //Containers:
        addSingleContainer();
        addMultiContainer();
        addCustomContainer();
        //connect(stackedViewContainers()->container("Single"),SIGNAL(viewAdded(dtkAbstractView*)),
        //    d->timeToolBox,SLOT(onViewAdded(dtkAbstractView*)));
    }
}

//static
QString medSegmentationConfiguration::description( void ) const
{
    static QString descString( "medSegmentationConfiguration" );
    return descString;
}



