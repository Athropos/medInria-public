// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "medViewSegmentation.h"
#include "medViewSegmentationPlugin.h"

#include "medSegmentationConfiguration.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// medViewSegmentationPluginPrivate
// /////////////////////////////////////////////////////////////////

class medViewSegmentationPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// medViewSegmentationPlugin
// /////////////////////////////////////////////////////////////////

medViewSegmentationPlugin::medViewSegmentationPlugin(QObject *parent) : dtkPlugin(parent), d(new medViewSegmentationPluginPrivate)
{

}

medViewSegmentationPlugin::~medViewSegmentationPlugin(void)
{
    delete d;
    d = NULL;
}

bool medViewSegmentationPlugin::initialize(void)
{
    bool ret (true);
    if(!medViewSegmentation::registered())
        dtkWarning() << "Unable to register medViewSegmentation type";

    ret &= medSegmentationConfiguration::registerWithViewerConfigurationFactory();

    return ret;
}

bool medViewSegmentationPlugin::uninitialize(void)
{
    return true;
}

QString medViewSegmentationPlugin::name(void) const
{
    return "medViewSegmentationPlugin";
}

QString medViewSegmentationPlugin::description(void) const
{
    return "medViewSegmentationPlugin";
}

QStringList medViewSegmentationPlugin::tags(void) const
{
    return QStringList();
}

QStringList medViewSegmentationPlugin::types(void) const
{
    return QStringList() << "medViewSegmentation";
}

Q_EXPORT_PLUGIN2(medViewSegmentationPlugin, medViewSegmentationPlugin)
