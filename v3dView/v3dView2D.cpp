// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "v3dView2D.h"
#include "v3dView3D.h"

#include <dtkCore/dtkAbstractViewFactory.h>

#include <vtkRenderer.h>
#include <vtkRenderWindow.h>

#include <vtkViewImage2D.h>
#include <vtkViewImage3D.h>

#include <QVTKWidget.h>

// /////////////////////////////////////////////////////////////////
// v3dView2DPrivate
// /////////////////////////////////////////////////////////////////

class v3dView2DPrivate
{
public:
    vtkRenderer *renderer;
    vtkViewImage2D *view;

    QVTKWidget *widget;
};

// /////////////////////////////////////////////////////////////////
// v3dView2D
// /////////////////////////////////////////////////////////////////

v3dView2D::v3dView2D(void) : dtkAbstractView(), d(new v3dView2DPrivate)
{
    d->renderer = vtkRenderer::New();

    d->widget = new QVTKWidget;
    d->widget->GetRenderWindow()->AddRenderer(d->renderer);

    d->view = vtkViewImage2D::New();
    d->view->SetRenderWindow(d->widget->GetRenderWindow());
    d->view->SetRenderer(d->renderer);
    d->view->SetBackgroundColor(0.0, 0.0, 0.0);
    d->view->SetLeftButtonInteractionStyle(vtkViewImage2D::ZOOM_INTERACTION);
    d->view->SetMiddleButtonInteractionStyle(vtkViewImage2D::SELECT_INTERACTION);
    d->view->SetRightButtonInteractionStyle(vtkViewImage2D::NO_INTERACTION);
}

v3dView2D::~v3dView2D(void)
{

}

bool v3dView2D::registered(void)
{
    return dtkAbstractViewFactory::instance()->registerViewType("v3dView2D", createV3dView2D);
}

QString v3dView2D::description(void) const
{
    return "v3dView2D";
}

// /////////////////////////////////////////////////////////////////
// 
// /////////////////////////////////////////////////////////////////

void v3dView2D::clear(void)
{
    if(!d->view)
	return;
    
    d->view->Clear();
}

void v3dView2D::reset(void)
{
    if(!d->view)
	return;
    
    d->view->Reset();
}

void v3dView2D::update(void)
{
    d->view->Render();

    d->widget->update();
}

void v3dView2D::link(dtkAbstractView *other)
{
    if(!d->view)
	return;

    if(!other)
	return;

    if(vtkViewImage2D *view = dynamic_cast<vtkViewImage2D *>((vtkObject*)(other->view())))
	d->view->AddChild(view);

    if(vtkViewImage3D *view = dynamic_cast<vtkViewImage3D *>((vtkObject*)(other->view())))
	d->view->AddChild(view);
}

void v3dView2D::unlink(dtkAbstractView *other)
{
    Q_UNUSED(other);
}

void *v3dView2D::view(void)
{
    return d->view;
}

void v3dView2D::setData(dtkAbstractData *data)
{
    if(!d->view)
        return;
    
    if(!data)
        return;

    if(vtkDataSet *dataset = vtkDataSet::SafeDownCast((vtkDataObject *)(data->data())))
        d->view->AddDataSet(dataset);

    dtkAbstractView::setData(data);

    this->update();
}

QWidget *v3dView2D::widget(void)
{
    return d->widget;
}

// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractView *createV3dView2D(void)
{
    return new v3dView2D;
}
