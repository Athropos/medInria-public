// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "v3dView.h"
#include "v3dViewFiberInteractor.h"
#include "v3dViewPlugin.h"

#include <dtkCore/dtkLog.h>

// /////////////////////////////////////////////////////////////////
// v3dViewPluginPrivate
// /////////////////////////////////////////////////////////////////

class v3dViewPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// v3dViewPlugin
// /////////////////////////////////////////////////////////////////

v3dViewPlugin::v3dViewPlugin(QObject *parent) : dtkPlugin(parent), d(new v3dViewPluginPrivate)
{

}

v3dViewPlugin::~v3dViewPlugin(void)
{
    delete d;

    d = NULL;
}

bool v3dViewPlugin::initialize(void)
{
    if (!v3dView::registered()) dtkWarning() << "Unable to register v3dView type";
	if (!v3dViewFiberInteractor::registered()) dtkWarning() << "Unable to register v3dViewFiberInteractor type";
      
    return true;
}

bool v3dViewPlugin::uninitialize(void)
{
    return true;
}

QString v3dViewPlugin::name(void) const
{
    return "v3dViewPlugin";
}

QString v3dViewPlugin::description(void) const
{
    return "v3dView";
}

QStringList v3dViewPlugin::tags(void) const
{
    return QStringList() << "v3d" << "view";
}

QStringList v3dViewPlugin::types(void) const
{
    return QStringList() << "v3dView" << "v3dViewFiberInteractor";
}

Q_EXPORT_PLUGIN2(v3dViewPlugin, v3dViewPlugin)
