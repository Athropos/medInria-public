[DEFAULT]
cpus=2
projects_dir=C:\projects
install=1
package=0
archive_dir=C:\archive
programFilesX86=c:\\Program\ Files\\Microsoft\ \(x86\)
cyg_drive=
generator_type=Visual Studio 10
win32_configuration= /property:Configuration=%(build_type)s 

[commands]
visual_build=C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe
cpack=cpack
cmake=cmake -G "Visual Studio 10"
wget=python

[projects]
#medinria must come last so that we can create the installer
projects=dtk,itk,vtk,vtkinria3d-public,medinria1,dcmtk,ttk-public,medinria-plugins,medinria

[package_deps]
package_manager=
deps=

[cmake-common]
CMAKE_INSTALL_PREFIX:STRING="C:/Program Files (x86)/inria/"
CPACK_USE_DESTDIR:BOOL=ON
CPACK_BINARY_RPM:BOOL=OFF
CPACK_BINARY_NSIS:BOOL=ON
QT_QMAKE_EXECUTABLE:FILEPATH=C:/qt-4.7.1/bin/qmake.exe


[dcmtk]
extra_build_cmd=
#installed in the extra build command, because of the special install targets
install=1


#medinria and medinria1 due to the medinria-plugins' dependency on medinria 
[medinria-installer]
project_name=medinria
destination_dir=medinria
#already built in medinria1, just create the overall package
configure=0
build=0
package=1
package_dir="z:/installers/windows/32"
#wonderful set of commands:
#1- copy all qt lib in the installation dir
#2- run the nsis package scripts through visual studio
#3- mount the data drive (the windows task doesn't run with the same priviledges, or whatever?!?)
#4- create dir on the mounted dir
#5- copy the installer to its final resting place
extra_package_cmd=c:\\scripts\\qt_install.py c:\\qt-4.7.1 "C:/Program Files (x86)/inria/" & C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe  nsis.vcxproj & net use z: \\10.20.3.3\medinria_data & mkdir %(package_dir)s & cp -v "bin/medinria-0.2.0-win32-x86.exe" %(package_dir)s\\

[medinria]
#do not create package. will be created after all has been installed
package=0
source_host=dev-med.inria.fr
source_file=medinria/medinria.git
scm=git


[dtk-cmake]
BUILD_WRAPPERS:BOOL=OFF

[vtkinria3d-public-cmake]
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.0/build
VTK_DIR:PATH=%(projects_dir)s/vtk-5.6.1/build

[vtkinria3d-private-cmake]
VTK_DIR:PATH=%(projects_dir)s/vtk-5.6.1/build
vtkINRIA3D_DIR:PATH=%(projects_dir)s/vtkinria3d-public/build

[ttk-public-cmake]
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.0/build
VTK_DIR:PATH=%(projects_dir)s/vtk-5.6.1/build

[ttk-private-cmake]
TTK_DIR:PATH=%(projects_dir)s/ttk-public/build

[medinria-cmake]
dtk_DIR:PATH=%(projects_dir)s/dtk/build

[medinria-installer-cmake]
dtk_DIR:PATH=%(projects_dir)s/dtk/build


[medinria-plugins-cmake]
DCMTK_DIR:PATH=%(projects_dir)s/dcmtk-install
DCMTK_SOURCE_DIR:PATH=%(projects_dir)s/dcmtk
ITK_DIR:PATH=%(projects_dir)s/itk-3.20.0/build
VTK_DIR:PATH=%(projects_dir)s/vtk-5.6.1/build
dtk_DIR:PATH=%(projects_dir)s/dtk/build
vtkINRIA3D_DIR:PATH=%(projects_dir)s/vtkinria3d-public/build
TTK_DIR:PATH=%(projects_dir)s/ttk-public/build
medinria_DIR:PATH=%(projects_dir)s/medinria/build

[vtk-cmake]
VTK_USE_NVCONTROL:BOOL=OFF
VTK_WRAP_TCL:BOOL=OFF
DirectX_INCLUDE_DIR:PATH="C:/Program Files (x86)/Microsoft DirectX SDK (June 2010)/Include"
DirectX_LIBRARY:FILEPATH="C:/Program Files (x86)/Microsoft DirectX SDK (June 2010)/Lib/x86/d3d9.lib"

[dcmtk-cmake]
DCMTK_OVERWRITE_WIN32_COMPILER_FLAGS:BOOL=OFF
BUILD_SHARED_LIBS:BOOL=OFF

