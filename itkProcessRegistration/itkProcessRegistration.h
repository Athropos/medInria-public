// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#ifndef ITKPROCESSREGISTRATION_H
#define ITKPROCESSREGISTRATION_H

#include <QtGui>

#include <dtkCore/dtkAbstractData.h>
#include <dtkCore/dtkAbstractProcess.h>

#include <itkImage.h>
#include <itkImageRegistrationFactory.h>
#include <itkRegistrationMethod.h>

#include "itkProcessRegistrationWidget.h"
#include "itkProcessRegistrationPluginExport.h"

class itkProcessRegistrationPrivate;

class ITKPROCESSREGISTRATIONPLUGIN_EXPORT itkProcessRegistration : public dtkAbstractProcess
{
    Q_OBJECT

public:
             itkProcessRegistration(void);
    virtual ~itkProcessRegistration(void);

    typedef itk::Image<double,3> ImageType;
    typedef itk::RegistrationMethod<ImageType> RegistrationMethodType;
    typedef itk::ImageRegistrationFactory<ImageType> RegistrationFactoryType;

    virtual QString description(void) const;

    static bool registered(void);

	 dtkUi *ui(void);

public slots:
    void setInput(dtkAbstractData *data, int channel);
    void setParameter(dtkAbstractObject*  data, int channel);

    dtkAbstractData *output(void);

    int parseRegistrationType(void);

    int doRegistration(RegistrationMethodType *method);

	 void update(void);

public slots:
    void chooseFixedImage(void);
    void chooseMovingImage(void);
    void chooseRegMethod(QString);

    void onPropertySet(QString key, QString value);

private:
    itkProcessRegistrationPrivate *d;
};

dtkAbstractProcess *createItkProcessRegistration(void);

#endif
