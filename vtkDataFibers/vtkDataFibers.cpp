// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "vtkDataFibers.h"

#include <dtkCore/dtkAbstractDataFactory.h>

#include "vtkSmartPointer.h"
#include "vtkPolyData.h"
#include "vtkPolyDataReader.h"
#include "vtkPolyDataWriter.h"
#include "vtkFiberDataSet.h"

// /////////////////////////////////////////////////////////////////
// vtkDataFibersPrivate
// /////////////////////////////////////////////////////////////////

class vtkDataFibersPrivate
{
public:
    vtkSmartPointer<vtkFiberDataSet> data;
};

// /////////////////////////////////////////////////////////////////
// vtkDataFibers
// /////////////////////////////////////////////////////////////////

vtkDataFibers::vtkDataFibers(void) : dtkAbstractData(), d(new vtkDataFibersPrivate)
{
    d->data = 0;
}

vtkDataFibers::~vtkDataFibers(void)
{
    delete d;
    d = 0;
}

bool vtkDataFibers::registered(void)
{
    return dtkAbstractDataFactory::instance()->registerDataType("vtkDataFibers", createVtkDataFibers);
}

QString vtkDataFibers::description(void) const
{
    return "vtkDataFibers";
}

bool vtkDataFibers::read(const QString& file)
{
  /*
	vtkPolyDataReader* reader = vtkPolyDataReader::New();
	reader->SetFileName( file.toAscii().constData() );
	if (!reader->IsFilePolyData() )
		return false;
	
	reader->Update();
	d->data = reader->GetOutput();
	*/
	return false;
}

bool vtkDataFibers::write(const QString& file)
{
  /*
	if (!d->data)
		return false;
	vtkPolyDataWriter* writer = vtkPolyDataWriter::New();
	writer->SetFileName( file.toAscii().constData() );
	writer->SetInput( d->data );
	writer->SetFileTypeToBinary();
	writer->Update();
  */
	return false;
}

void vtkDataFibers::setData(void *data)
{
  if (vtkFiberDataSet *dataset = vtkFiberDataSet::SafeDownCast (static_cast<vtkObject*>(data)))
      d->data = dataset;
}

void *vtkDataFibers::data(void)
{
    return d->data;
}

// /////////////////////////////////////////////////////////////////
// Type instanciation
// /////////////////////////////////////////////////////////////////

dtkAbstractData *createVtkDataFibers(void)
{
    return new vtkDataFibers;
}
