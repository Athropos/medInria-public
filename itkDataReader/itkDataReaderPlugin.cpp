// /////////////////////////////////////////////////////////////////
// Generated by dtkPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "itkDataImageReader.h"
#include "itkDataReaderPlugin.h"

#include <dtkCore/dtkLog.h>


// /////////////////////////////////////////////////////////////////
// itkDataReaderPluginPrivate
// /////////////////////////////////////////////////////////////////

class itkDataReaderPluginPrivate 
{
public:
    // Class variables go here.
};

// /////////////////////////////////////////////////////////////////
// itkDataReaderPlugin
// /////////////////////////////////////////////////////////////////

itkDataReaderPlugin::itkDataReaderPlugin(QObject *parent) : dtkPlugin(parent), d(new itkDataReaderPluginPrivate)
{

}

itkDataReaderPlugin::~itkDataReaderPlugin(void)
{
    delete d;

    d = NULL;
}

bool itkDataReaderPlugin::initialize(void)
{
    if(!itkDataImageChar3Reader::registered()) dtkWarning() << "Unable to register itkDataImageChar3Reader type";
    if(!itkDataImageUChar3Reader::registered()) dtkWarning() << "Unable to register itkDataImageUChar3Reader type";
    if(!itkDataImageShort3Reader::registered()) dtkWarning() << "Unable to register itkDataImageShort3Reader type";
    if(!itkDataImageUShort3Reader::registered()) dtkWarning() << "Unable to register itkDataImageUShort3Reader type";
    if(!itkDataImageInt3Reader::registered()) dtkWarning() << "Unable to register itkDataImageInt3Reader type";
    if(!itkDataImageUInt3Reader::registered()) dtkWarning() << "Unable to register itkDataImageUInt3Reader type";
    if(!itkDataImageLong3Reader::registered()) dtkWarning() << "Unable to register itkDataImageLong3Reader type";
    if(!itkDataImageULong3Reader::registered()) dtkWarning() << "Unable to register itkDataImageULong3Reader type";
    if(!itkDataImageFloat3Reader::registered()) dtkWarning() << "Unable to register itkDataImageFloat3Reader type";
    if(!itkDataImageDouble3Reader::registered()) dtkWarning() << "Unable to register itkDataImageDouble3Reader type";

    return true;
}

bool itkDataReaderPlugin::uninitialize(void)
{
    return true;
}

QString itkDataReaderPlugin::name(void) const
{
    return "itkDataReaderPlugin";
}

QString itkDataReaderPlugin::description(void) const
{
    return "Readers for any ITK data type.";
}

QStringList itkDataReaderPlugin::tags(void) const
{
  return QStringList() << "itk" << "data" << "reader";
}

QStringList itkDataReaderPlugin::types(void) const
{
    return QStringList() << "itkDataImageChar3Reader"
			 << "itkDataImageUChar3Reader"
			 << "itkDataImageShort3Reader"
			 << "itkDataImageUShort3Reader"
			 << "itkDataImageInt3Reader"
			 << "itkDataImageUInt3Reader"
			 << "itkDataImageLong3Reader"
			 << "itkDataImageULong3Reader"
			 << "itkDataImageFloat3Reader"
			 << "itkDataImageDouble3Reader";
}

Q_EXPORT_PLUGIN2(itkDataReaderPlugin, itkDataReaderPlugin)
