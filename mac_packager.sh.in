#!/bin/bash

# Usage: 
# - mac_packager.sh plugin1 plugin2 ... pluginN
# or
# - mac_packager.sh path_to_plugins/*

# Only vtk libraries seem not to be copied as relative path are used. You have to copy them manually.

# To build a stand-alone mac version of medinria, do the following:

# 1. build medinria / medinria-plugins
# 2. make install in the same directory for each project
# 3. copy vtk libraries into ${CMAKE_INSTALL_PREFIX}/bin/medinria.app/Contents/Frameworks
# 4. run mac_pacakger.sh with all plugins in arguments

# The bundle medinria.app will contain all plugins and will be standalone, ready to be packaged.

for i in $( otool -L $* 2> /dev/null \
| sort -u | grep -i -E 'itk|vtk|/opt/local/' | cut -d " " -f 1 ); do
	cp -np $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks 2> /dev/null;
done

for i in $( otool -L @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks/* 2> /dev/null \
	| sort -u | grep -i -E 'itk|vtk|/opt/local/' | cut -d " " -f 1 ); do
		cp -np $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks 2> /dev/null;
done

# copy plugins in PlugIns directory
for i in $*; do
	cp -p $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/PlugIns;
done

cd @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/;

for i in $(ls PlugIns | grep -E 'dylib' ); do
		echo "    Updating $i"
		#update library id
		install_name_tool -id @executable_path/../PlugIns/$i PlugIns/$i
		#update library links
		for j in $( otool -L PlugIns/$i | grep -i -E 'med|dtk|itk|vtk|/opt/local/' | cut -d " " -f 1 ); do
			install_name_tool -change \
			$j @executable_path/../Frameworks/`echo $j | rev | cut -d "/" -f 1 | rev` \
			PlugIns/$i
		done
		install_name_tool -change @QT_LIBRARY_DIR@/QtOpenGL.framework/Versions/4/QtOpenGL @executable_path/../Frameworks/QtOpenGL.framework/Versions/4/QtOpenGL PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtHelp.framework/Versions/4/QtHelp @executable_path/../Frameworks/QtHelp.framework/Versions/4/QtHelp PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtWebKit.framework/Versions/4/QtWebKit @executable_path/../Frameworks/QtWebKit.framework/Versions/4/QtWebKit PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtGui.framework/Versions/4/QtGui @executable_path/../Frameworks/QtGui.framework/Versions/4/QtGui PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtXml.framework/Versions/4/QtXml @executable_path/../Frameworks/QtXml.framework/Versions/4/QtXml PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtSql.framework/Versions/4/QtSql @executable_path/../Frameworks/QtSql.framework/Versions/4/QtSql PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtXmlPatterns.framework/Versions/4/QtXmlPatterns @executable_path/../Frameworks/QtXmlPatterns.framework/Versions/4/QtXmlPatterns PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtNetwork.framework/Versions/4/QtNetwork @executable_path/../Frameworks/QtNetwork.framework/Versions/4/QtNetwork PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtCore.framework/Versions/4/QtCore @executable_path/../Frameworks/QtCore.framework/Versions/4/QtCore PlugIns/$i
		install_name_tool -change @QT_LIBRARY_DIR@/phonon.framework/Versions/4/phonon @executable_path/../Frameworks/phonon.framework/Versions/4/phonon PlugIns/$i
done; 


for i in $( ls Frameworks | grep -E 'dylib' ); do
		echo "    Updating $i"
		#update library id
		install_name_tool -id @executable_path/../Frameworks/$i Frameworks/$i
		#update library links
		for j in $( otool -L Frameworks/$i | grep -i -E 'med|dtk|itk|vtk|/opt/local/' | cut -d " " -f 1 ); do
			install_name_tool -change \
			$j @executable_path/../Frameworks/`echo $j | rev | cut -d "/" -f 1 | rev` \
			Frameworks/$i
		done
		install_name_tool -change @QT_LIBRARY_DIR@/QtOpenGL.framework/Versions/4/QtOpenGL @executable_path/../Frameworks/QtOpenGL.framework/Versions/4/QtOpenGL Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtHelp.framework/Versions/4/QtHelp @executable_path/../Frameworks/QtHelp.framework/Versions/4/QtHelp Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtWebKit.framework/Versions/4/QtWebKit @executable_path/../Frameworks/QtWebKit.framework/Versions/4/QtWebKit Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtGui.framework/Versions/4/QtGui @executable_path/../Frameworks/QtGui.framework/Versions/4/QtGui Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtXml.framework/Versions/4/QtXml @executable_path/../Frameworks/QtXml.framework/Versions/4/QtXml Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtSql.framework/Versions/4/QtSql @executable_path/../Frameworks/QtSql.framework/Versions/4/QtSql Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtXmlPatterns.framework/Versions/4/QtXmlPatterns @executable_path/../Frameworks/QtXmlPatterns.framework/Versions/4/QtXmlPatterns Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtNetwork.framework/Versions/4/QtNetwork @executable_path/../Frameworks/QtNetwork.framework/Versions/4/QtNetwork Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/QtCore.framework/Versions/4/QtCore @executable_path/../Frameworks/QtCore.framework/Versions/4/QtCore Frameworks/$i
		install_name_tool -change @QT_LIBRARY_DIR@/phonon.framework/Versions/4/phonon @executable_path/../Frameworks/phonon.framework/Versions/4/phonon Frameworks/$i
done; 



