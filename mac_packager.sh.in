#!/bin/bash

# Usage: 
# - mac_packager.sh plugin1 plugin2 ... pluginN
# or
# - mac_packager.sh path_to_plugins/*

# To build a stand-alone mac version of medinria, do the following:

# 1. build medinria / medinria-plugins
# 2. make install of each project
# 3. chmod u+x mac_pacakger.sh
# 4. run mac_pacakger.sh with plugins in arguments (works for common plugins for now), e.g. : ./mac_packager.sh ${Plugins_Install_Dir}/plugins/*

# The bundle medinria.app will contain all plugins and will be standalone, packaged into MedINRIA.dmg in the install dir

for i in $( otool -L $* 2> /dev/null \
| sort -u | grep -i -E 'itk|vtk' | cut -d " " -f 1 ); do
	cp -np $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks 2> /dev/null;
done

for i in $( otool -L @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks/* 2> /dev/null \
	| sort -u | grep -i -E 'itk|vtk' | cut -d " " -f 1 ); do
		cp -np $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks 2> /dev/null;
done

# copy plugins in PlugIns directory

mkdir -p @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/PlugIns

for i in $*; do
	echo "    Copying $i to plugins"
	cp -p $i @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/PlugIns
done

# copy sqlite drivers and svg reader since they are not explicitely linked by medinria

cp -p /Developer/Applications/Qt/plugins/sqldrivers/libqsqlite.dylib @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks
cp -p /Developer/Applications/Qt/plugins/imageformats/libqsvg.dylib @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/Frameworks

cd @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents/;

for i in $(ls PlugIns | grep -E 'dylib' ); do
		echo "    Updating $i"
		#update library id
		install_name_tool -id @executable_path/../PlugIns/$i PlugIns/$i
		#update library links
		for j in $( otool -L PlugIns/$i | grep -i -E 'med|dtk|itk|vtk' | cut -d " " -f 1 ); do
			install_name_tool -change \
			$j @executable_path/../Frameworks/`echo $j | rev | cut -d "/" -f 1 | rev` \
			PlugIns/$i
		done

		for j in $( otool -L PlugIns/$i | grep -E '.framework' | cut -d " " -f 1 ); do
			if [ ! `echo $j | grep '@executable_path'` ]; then
				echo "    Updating $j"
				install_name_tool -change $j @executable_path/../Frameworks/$j PlugIns/$i
			fi
		done;
done; 


for i in $( ls Frameworks | grep -E 'dylib' ); do
		echo "    Updating $i"
		#update library id
		install_name_tool -id @executable_path/../Frameworks/$i Frameworks/$i
		#update library links
		for j in $( otool -L Frameworks/$i | grep -i -E 'med|dtk|itk|vtk' | cut -d " " -f 1 ); do
			install_name_tool -change \
			$j @executable_path/../Frameworks/`echo $j | rev | cut -d "/" -f 1 | rev` \
			Frameworks/$i
		done
		
		for j in $( otool -L Frameworks/$i | grep -E '.framework' | cut -d " " -f 1 ); do
			if [ ! `echo $j | grep '@executable_path'` ]; then
				install_name_tool -change $j @executable_path/../Frameworks/$j Frameworks/$i
			fi
        done;
done; 

cd @CMAKE_INSTALL_PREFIX@/bin/
macdeployqt medinria.app

cd @CMAKE_INSTALL_PREFIX@/bin/medinria.app/Contents

mkdir -p PlugIns/sqldrivers
mv Frameworks/libqsqlite.dylib PlugIns/sqldrivers/
mv Frameworks/libqsvg.dylib PlugIns/imageformats/

#Run fancy packaging apple script
osascript @PROJECT_BINARY_DIR@/ScriptGenerateMedInriaFancyDMG.scpt

